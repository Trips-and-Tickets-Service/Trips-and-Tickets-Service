name: Full Stack CI/CD Pipeline

on:
  push:
    branches: [CI/CD]
  pull_request:
    branches: [CI/CD]

jobs:
  # Бэкенд (Go) + PostgreSQL
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: |
          cd backend
          go mod download

      - name: Run tests with PostgreSQL
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        run: |
          cd backend
          go test -v ./...

      - name: Build backend Docker image
        run: |
          cd backend
          docker build -t backend-app .

  # Фронтенд (Flutter)
  frontend:
    needs: backend  # Зависит от успешного выполнения бэкенда
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Format code
        run: dart format .
        working-directory: ./frontend

      - name: Get dependencies
        run: flutter pub get
        working-directory: ./frontend

      - name: Run tests
        run: flutter test
        working-directory: ./frontend

      - name: Build for web
        run: flutter build web --release --base-href /Trips-and-Tickets-Service/
        working-directory: ./frontend

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./frontend/build/web
          publish_branch: gh-pages
          force_orphan: true