name: Full Stack CI/CD

on:
  push:
    branches: [CI/CD]
  pull_request:
    branches: [CI/CD]

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Install dependencies
        run: flutter pub get
        working-directory: ./frontend

      - name: Run tests
        run: flutter test
        working-directory: ./frontend

      - name: Build Flutter Web
        run: flutter build web --release --base-href /Trips-and-Tickets-Service/
        working-directory: ./frontend

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.DEPLOY_TOKEN }}  # Ваш PAT с правами repo
          publish_dir: ./frontend/build/web
          publish_branch: gh-pages
          force_orphan: true
          keep_files: false

  backend:
    needs: frontend
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.4'

      - name: Install dependencies
        run: go mod download
        working-directory: ./backend

      - name: Run tests
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: go test ./...
        working-directory: ./backend

      - name: Build binary
        run: CGO_ENABLED=0 GOOS=linux go build -o ./bin/app ./cmd/app/main.go
        working-directory: ./backend

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-binary
          path: ./backend/bin/app
          retention-days: 1